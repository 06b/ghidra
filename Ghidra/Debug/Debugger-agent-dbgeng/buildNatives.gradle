/* ###
 * IP: GHIDRA
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 
if ("win_x86_64".equals(getCurrentPlatformName())) {

	String makeName = "win_x86_64TlbMake"
	task(type: Exec, makeName) {

		def projectPath = projectDir.toString()
		def solutionBatchFilePath = projectPath + "/build/buildSolution.bat"
		def projectPathWindows = projectPath.replace("/", File.separator)
		
		doFirst {
			file("build/os/win_x86_64").mkdirs()
			
			def srcdir = "src/main/py/src/dbgmodel"
			def msbuildCmd = "midl /tlb build/os/win_x86_64/dbgmodel.tlb ${srcdir}/DbgModel.idl"
			
			println "Executing: " + msbuildCmd
			
			new File(solutionBatchFilePath).withWriter { out ->
				out.println "call " + VISUAL_STUDIO_VCVARS_CMD
				out.println msbuildCmd
			}
		}
		
		doLast {
			assert file("build/os/win_x86_64/dbgmodel.tlb").exists() : "Failed to build dbgmodel.tlb"
		}
		
		executable "cmd"
		
		args	"/c"
		args	solutionBatchFilePath.replace("/", File.separator)
	}	
}
